[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "cars.views",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cars.views",
        "description": "cars.views",
        "detail": "cars.views",
        "documentation": {}
    },
    {
        "label": "cars_view",
        "importPath": "cars.views",
        "description": "cars.views",
        "isExtraImport": true,
        "detail": "cars.views",
        "documentation": {}
    },
    {
        "label": "new_car_view",
        "importPath": "cars.views",
        "description": "cars.views",
        "isExtraImport": true,
        "detail": "cars.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "Car",
        "importPath": "cars.models",
        "description": "cars.models",
        "isExtraImport": true,
        "detail": "cars.models",
        "documentation": {}
    },
    {
        "label": "Brand",
        "importPath": "cars.models",
        "description": "cars.models",
        "isExtraImport": true,
        "detail": "cars.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "importPath": "cars.models",
        "description": "cars.models",
        "isExtraImport": true,
        "detail": "cars.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "importPath": "cars.models",
        "description": "cars.models",
        "isExtraImport": true,
        "detail": "cars.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "CarModelForm",
        "importPath": "cars.forms",
        "description": "cars.forms",
        "isExtraImport": true,
        "detail": "cars.forms",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.asgi",
        "description": "app.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "app.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-l)7r-52u7k)1el$52+g-$d&3m_l7&wgnpi^74o9*+)-&^58af$'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-l)7r-52u7k)1el$52+g-$d&3m_l7&wgnpi^74o9*+)-&^58af$'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'cars',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'cars',\n]\nMIDDLEWARE = [",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'app.urls'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "ROOT_URLCONF = 'app.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,\"app/templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,\"app/templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "WSGI_APPLICATION = 'app.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "LANGUAGE_CODE = 'pt-BR'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "TIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.urls",
        "description": "app.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('cars/', cars_view, name='cars_list'),\n    path('new_cars/', new_car_view, name='new_car'),\n    path('', lambda request: redirect('/cars')),\n] + static(settings.MEDIA_ROOT, document_root=settings.MEDIA_ROOT)",
        "detail": "app.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.wsgi",
        "description": "app.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "app.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cars.migrations.0001_initial",
        "description": "cars.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Car',\n            fields=[\n                ('id', models.AutoField(primary_key=True, serialize=False)),\n                ('model', models.CharField(max_length=200)),",
        "detail": "cars.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cars.migrations.0002_brand_alter_car_brand",
        "description": "cars.migrations.0002_brand_alter_car_brand",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('cars', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Brand',\n            fields=[\n                ('id', models.AutoField(primary_key=True, serialize=False)),\n                ('name', models.CharField(max_length=200)),",
        "detail": "cars.migrations.0002_brand_alter_car_brand",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cars.migrations.0003_car_photo_car_plate",
        "description": "cars.migrations.0003_car_photo_car_plate",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('cars', '0002_brand_alter_car_brand'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='car',\n            name='photo',\n            field=models.ImageField(blank=True, null=True, upload_to='cars/'),\n        ),",
        "detail": "cars.migrations.0003_car_photo_car_plate",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cars.migrations.0004_alter_car_photo",
        "description": "cars.migrations.0004_alter_car_photo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('cars', '0003_car_photo_car_plate'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='car',\n            name='photo',\n            field=models.ImageField(blank=True, null=True, upload_to='cars'),\n        ),",
        "detail": "cars.migrations.0004_alter_car_photo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cars.migrations.0005_alter_car_photo",
        "description": "cars.migrations.0005_alter_car_photo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('cars', '0004_alter_car_photo'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='car',\n            name='photo',\n            field=models.FileField(blank=True, null=True, upload_to='cars'),\n        ),",
        "detail": "cars.migrations.0005_alter_car_photo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cars.migrations.0006_alter_car_photo",
        "description": "cars.migrations.0006_alter_car_photo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('cars', '0005_alter_car_photo'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='car',\n            name='photo',\n            field=models.ImageField(blank=True, null=True, upload_to='cars/'),\n        ),",
        "detail": "cars.migrations.0006_alter_car_photo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cars.migrations.0007_alter_car_photo",
        "description": "cars.migrations.0007_alter_car_photo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('cars', '0006_alter_car_photo'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='car',\n            name='photo',\n            field=models.ImageField(blank=True, null=True, upload_to='cars'),\n        ),",
        "detail": "cars.migrations.0007_alter_car_photo",
        "documentation": {}
    },
    {
        "label": "CarAdmin",
        "kind": 6,
        "importPath": "cars.admin",
        "description": "cars.admin",
        "peekOfCode": "class CarAdmin(admin.ModelAdmin):\n    list_display = ('model','brand', 'factory_year', 'model_year', 'value')\n    search_fields = ('model','brand')\nclass BrandAdmin(admin.ModelAdmin):\n    list_display = ('name','id' )\n    search_fields = ('name', )\nadmin.site.register(Car, CarAdmin)\nadmin.site.register(Brand, BrandAdmin)",
        "detail": "cars.admin",
        "documentation": {}
    },
    {
        "label": "BrandAdmin",
        "kind": 6,
        "importPath": "cars.admin",
        "description": "cars.admin",
        "peekOfCode": "class BrandAdmin(admin.ModelAdmin):\n    list_display = ('name','id' )\n    search_fields = ('name', )\nadmin.site.register(Car, CarAdmin)\nadmin.site.register(Brand, BrandAdmin)",
        "detail": "cars.admin",
        "documentation": {}
    },
    {
        "label": "CarsConfig",
        "kind": 6,
        "importPath": "cars.apps",
        "description": "cars.apps",
        "peekOfCode": "class CarsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cars'",
        "detail": "cars.apps",
        "documentation": {}
    },
    {
        "label": "CarModelForm",
        "kind": 6,
        "importPath": "cars.forms",
        "description": "cars.forms",
        "peekOfCode": "class CarModelForm(forms.ModelForm):\n    class Meta:\n        model = Car\n        fields = '__all__'\n    def clean_value(self):\n        value = self.clean_data.get('value')\n        if value < 20000:\n            self.add_error('value', 'Valor mínimo do carro deve ser de R$20.000')\n        return value\n    def clean_factory_year(self):",
        "detail": "cars.forms",
        "documentation": {}
    },
    {
        "label": "Brand",
        "kind": 6,
        "importPath": "cars.models",
        "description": "cars.models",
        "peekOfCode": "class Brand(models.Model):\n    id = models.AutoField(primary_key=True)\n    name = models.CharField(max_length=200)\n    def __str__(self):\n        return self.name\nclass Car(models.Model):    \n    id = models.AutoField(primary_key=True)\n    model = models.CharField(max_length=200)\n    brand = models.ForeignKey(Brand, on_delete=models.PROTECT, related_name='car_brand')\n    factory_year = models.IntegerField(blank=True, null=True)",
        "detail": "cars.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "kind": 6,
        "importPath": "cars.models",
        "description": "cars.models",
        "peekOfCode": "class Car(models.Model):    \n    id = models.AutoField(primary_key=True)\n    model = models.CharField(max_length=200)\n    brand = models.ForeignKey(Brand, on_delete=models.PROTECT, related_name='car_brand')\n    factory_year = models.IntegerField(blank=True, null=True)\n    model_year = models.IntegerField(blank=True, null=True)\n    plate = models.CharField(max_length=10, blank=True, null=True)\n    value = models.DecimalField(max_digits=10,decimal_places=2,blank=True, null=True)\n    photo = models.ImageField(upload_to='cars',blank=True, null=True)\n    def __str__(self):",
        "detail": "cars.models",
        "documentation": {}
    },
    {
        "label": "cars_view",
        "kind": 2,
        "importPath": "cars.views",
        "description": "cars.views",
        "peekOfCode": "def cars_view(request):\n    cars = Car.objects.all().order_by('model')\n    search = request.GET.get('search')\n    if search:\n        cars = cars.filter(model__icontains=search)\n    return render(request, 'cars.html', {'cars': cars})\ndef new_car_view(request):\n    if request.method == 'POST':\n        new_car_form = CarModelForm(request.POST, request.FILES)\n        if new_car_form.is_valid():",
        "detail": "cars.views",
        "documentation": {}
    },
    {
        "label": "new_car_view",
        "kind": 2,
        "importPath": "cars.views",
        "description": "cars.views",
        "peekOfCode": "def new_car_view(request):\n    if request.method == 'POST':\n        new_car_form = CarModelForm(request.POST, request.FILES)\n        if new_car_form.is_valid():\n            new_car_form.save()\n            return redirect('cars_list')\n    elif request.method == 'GET':\n        new_car_form = CarModelForm()\n    return render(request, 'new_car.html', {'new_car_form': new_car_form})",
        "detail": "cars.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]